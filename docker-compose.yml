# Creat by Abra√£o Silva
# Date 12 Nov 2018 
version: '2'
services:
  docker-jenkins-tools: # JENKINS LATEST
    image: jenkins:latest
    container_name: jenkins-stack-tools
    restart: always
    ports:
      - 1000:8080
    volumes:
      - ./jenkins-stack-tools:/var/jenkins_home
      - /usr/bin/zip:/usr/bin/zip
      - /usr/bin/unzip:/usr/bin/unzip
      - /usr/bin/mvn:/usr/bin/mvn
    environment:
      TZ: America/Sao_Paulo

  postgresql: # BANCO DE DADOS POSTGRESQL
    image: orchardup/postgresql:latest
    environment:
      - POSTGRESQL_USER=sonar
      - POSTGRESQL_PASS=sonar
      - POSTGRESQL_DB=sonar
    volumes:
      - ./sonarqube/postgresql:/var/lib/postgresql

  sonarqube: # SONARQUBE 6.5
    image: sonarqube:6.5
    environment:
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgresql/sonar
    ports:
      - "2000:9000"
      - "9092:9092"

  elasticsearch: # ELK STACK
    image: elasticsearch:5.6.7
    hostname: elasticsearch
    restart: always
    ports:
      - 9200:9200/tcp
    mem_limit: 8000M
    volumes:
      - ./elasticsearch/volumes/config:/usr/share/elasticsearch/config
      - ./elasticsearch/volumes/data:/usr/share/elasticsearch/data
    environment:
      TZ: America/Sao_Paulo

  logstash:
    image: logstash:5.6.7
    hostname: logstash
    restart: always
    ports:
      - 9300:5044/tcp
    mem_limit: 4000M
    command: -f /etc/logstash/conf.d/logstash.conf
    links:
      - elasticsearch
    volumes:
      - ./logstash/volumes/config:/etc/logstash/conf.d
    environment:
      TZ: America/Sao_Paulo
          
  kibana:
    image: kibana:5.6.7 
    hostname: kibana
    restart: always
    ports:
      - 5601:5601/tcp
    mem_limit: 4000M
    links:
      - elasticsearch
    environment:
      - "ELASTICSEARCH_URL=http://elasticsearch:9200"
      - "TZ: America/Sao_Paulo"
    
  postgresql-jfrog:
    image: docker.bintray.io/postgres:9.5.2
    container_name: postgresql
    ports:
     - 5432:5432
    environment:
     - POSTGRES_DB=artifactory
     # The following must match the DB_USER and DB_PASSWORD values passed to Artifactory
     - POSTGRES_USER=artifactory
     - POSTGRES_PASSWORD=artifactory
    volumes:
     - /data/postgresql:/var/lib/postgresql/data
    restart: always
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000
  artifactory:
    image: docker.bintray.io/jfrog/artifactory-oss:6.5.2
    container_name: artifactory
    ports:
     - 80:8081
    depends_on:
     - postgresql
    links:
     - postgresql
    volumes:
     - /data/artifactory:/var/opt/jfrog/artifactory
    environment:
     - DB_TYPE=postgresql
     # The following must match the POSTGRES_USER and POSTGRES_PASSWORD values passed to PostgreSQL
     - DB_USER=artifactory
     - DB_PASSWORD=password
     # Add extra Java options by uncommenting the following line
     #- EXTRA_JAVA_OPTIONS=-Xmx4g
    restart: always
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000